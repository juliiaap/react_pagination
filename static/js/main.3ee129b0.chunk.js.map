{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","maxTabQuantity","Math","ceil","tabNumbers","useState","activePage","setActivePage","useEffect","onPageClick","event","currentTarget","id","className","classNames","disabled","href","onClick","map","number","active","App","selectedPage","setSelectPage","itemsOnPage","setItemsOnPage","totalItems","firstItem","lastItem","itemsList","value","onChange","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAiBC,KAAKC,KAAKN,EAAQC,GACnCM,EAAad,EAAW,EAAGW,GACjC,EAAoCI,mBAASN,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRD,EAAcR,KACb,CAACA,IAEJ,IAAMU,EAAc,SAClBC,IAEKA,EAAMC,cAAcC,KAAOb,GAIhCC,GAAcU,EAAMC,cAAcC,KAepC,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAA0B,IAAhBhB,IAAnD,SACE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBjB,EAAoB,OAAS,QAC5CkB,QApBY,WACE,IAAhBlB,GACFC,EAAaD,EAAc,IAazB,oBAUDK,EAAWc,KAAI,SAAAC,GAAM,OACpB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQD,IAAWb,IAHzB,SAOE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAI,WAAMG,GACVP,GAAE,UAAKO,GACPF,QAASR,EALX,SAOGU,KATEA,MAaT,oBAAIN,UAAWC,IACb,YAAa,CAAEC,SAAUhB,IAAgBE,IAD3C,SAIE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAAejB,IAAgBE,EAAiB,OAAS,QACzDgB,QA/CY,WACdlB,IAAgBE,GAClBD,EAAaD,EAAc,IAwCzB,wBC9EKsB,EAAgB,WAC3B,MAAsChB,mBAAS,GAA/C,mBAAOiB,EAAP,KAAqBC,EAArB,KACA,EAAsClB,mBAAS,GAA/C,mBAAOmB,EAAP,KAAoBC,EAApB,KACA,EAAqBpB,mBAAS,IAAvBqB,EAAP,oBACMC,GAAaL,EAAe,GAAKE,EAAc,EAC/CI,EAAYD,EAAYH,EAAc,EAAKE,EAC5CC,EAAYH,EAAc,EAC3BE,EAWEG,EAAYvC,EAAWqC,EAAWC,GACrCV,KAAI,SAAAxB,GAAC,qBAAYA,MAEpB,OACE,sBAAKmB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWS,EADX,mBACkCK,EADlC,cACiDC,EADjD,eACgEF,EADhE,OAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRD,GAAG,kBACHC,UAAU,eACViB,MAAON,EACPO,SAvBa,SAACrB,GACtBe,GAAgBf,EAAMsB,OAAOF,OAC7BP,EAAc,IAgBR,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEhB,MAAO6B,EACP5B,QAAS0B,EACTzB,YAAauB,EACbtB,aA7Ce,SAACkC,GACpBX,EAAcW,MA+CZ,6BACGL,EAAUX,KAAI,SAAAiB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5DvDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3ee129b0.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const maxTabQuantity = Math.ceil(total / perPage);\n  const tabNumbers = getNumbers(1, maxTabQuantity);\n  const [activePage, setActivePage] = useState(currentPage);\n\n  useEffect(() => {\n    setActivePage(currentPage);\n  }, [currentPage]);\n\n  const onPageClick = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (+event.currentTarget.id === currentPage) {\n      return;\n    }\n\n    onPageChange(+event.currentTarget.id);\n  };\n\n  const onPrevClick = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const onNextClick = () => {\n    if (currentPage !== maxTabQuantity) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={onPrevClick}\n        >\n          «\n        </a>\n      </li>\n      {tabNumbers.map(number => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: number === activePage },\n          )}\n          key={number}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${number}`}\n            id={`${number}`}\n            onClick={onPageClick}\n          >\n            {number}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item', { disabled: currentPage === maxTabQuantity },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === maxTabQuantity ? 'true' : 'false'}\n          onClick={onNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [selectedPage, setSelectPage] = useState(1);\n  const [itemsOnPage, setItemsOnPage] = useState(5);\n  const [totalItems] = useState(42);\n  const firstItem = (selectedPage - 1) * itemsOnPage + 1;\n  const lastItem = (firstItem + itemsOnPage - 1) < totalItems\n    ? (firstItem + itemsOnPage - 1)\n    : totalItems;\n\n  const onPageSelect = (page: number) => {\n    setSelectPage(page);\n  };\n\n  const onItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsOnPage(+event.target.value);\n    setSelectPage(1);\n  };\n\n  const itemsList = getNumbers(firstItem, lastItem)\n    .map(n => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstItem} - ${lastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={onItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={itemsOnPage}\n        currentPage={selectedPage}\n        onPageChange={onPageSelect}\n      />\n\n      <ul>\n        {itemsList.map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}